<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dns.analyse.dao.mapper.DomainDependenceDAO">


    <resultMap id="domainDependenceResultMap"
               type="dns.analyse.dao.model.DomainDependencePO">
        <result column="domain" jdbcType="VARCHAR" property="domain"/>
        <result column="domain_tree" jdbcType="VARCHAR" property="domainTree"/>
        <result column="domain_ip" jdbcType="VARCHAR" property="domainIp"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="mps_exist" jdbcType="TINYINT" property="mpsExist"/>
        <result column="domain_num" jdbcType="INTEGER" property="domainNum"/>
        <result column="is_valid" jdbcType="TINYINT" property="isValid"/>
        <result column="cross_domain" jdbcType="INTEGER" property="crossomain"/>
        <result column="is_cn" jdbcType="VARCHAR" property="isCn"/>
    </resultMap>



    <sql id="selectField">
        SELECT
        domain,
        domain_tree,
        domain_ip,
        flag,
        id,
        mps_exist,
        domain_num,
        is_valid,
        cross_domain,
        is_cn
        FROM  domain_dependence
    </sql>



    <insert id="insert" parameterType="dns.analyse.dao.model.DomainDependencePO"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO domain_dependence (
        domain,
        domain_tree,
        domain_ip,
        flag,
        mps_exist,
        domain_num,
        is_valid,
        cross_domain,
        is_cn
        ) VALUES (
        #{domain,jdbcType=VARCHAR},
        #{domainTree,jdbcType=VARCHAR},
        #{domainIp,jdbcType=VARCHAR},
        #{flag,jdbcType=INTEGER},
        #{mpsExist,jdbcType=TINYINT},
        #{domainNum,jdbcType=INTEGER},
        1,
        #{crossDomain,jdbcType=INTEGER},
        #{isCn,jdbcType=VARCHAR}
        )
        </insert>

    <select id="queryAllByCondition"  parameterType="map" resultMap="domainDependenceResultMap">
        <include refid="selectField"/>
        <where>
            AND is_valid=1
            <if test="condition.domain != null   and condition.domain !='' ">
                AND domain =#{condition.domain,jdbcType=VARCHAR}
            </if>
            <if test="condition.domainTree != null   and condition.domainTree !='' ">
                AND domain_tree =#{condition.domainTree,jdbcType=VARCHAR}
            </if>
            <if test="condition.domainIp != null   and condition.domainIp !='' ">
                AND domain_ip =#{condition.domainIp,jdbcType=VARCHAR}
            </if>
            <if test="condition.flag != null   and condition.flag !='' ">
                AND flag =#{condition.flag,jdbcType=INT UNSIGNED}
            </if>
            <if test="condition.id != null   and condition.id !='' ">
                AND id =#{condition.id,jdbcType=INTEGER}
            </if>
            <if test="condition.mpsExist != null   and condition.mpsExist !='' ">
                AND mps_exist =#{condition.mpsExist,jdbcType=TINYINT}
            </if>
            <if test="condition.domainNum != null   and condition.domainNum !='' ">
                AND domain_num =#{condition.domainNum,jdbcType=INTEGER}
            </if>
            <if test="condition.crossDomain != 2 ">
                AND cross_domain =#{condition.crossDomain,jdbcType=INTEGER}
            </if>
            <if test="condition.isCn != null   and condition.isCn !='' ">
                AND is_cn =#{condition.isCn,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="queryCountByCondition" parameterType="map" resultType="java.lang.Integer" >
        SELECT  count(*) from domain_dependence
        <where>

            <if test="condition.domain != null and condition.domain !='' ">
                AND domain =#{condition.domain,jdbcType=VARCHAR}
            </if>
            <if test="condition.domainTree != null and condition.domainTree !='' ">
                AND domain_tree =#{condition.domainTree,jdbcType=VARCHAR}
            </if>
            <if test="condition.domainIp != null and condition.domainIp !='' ">
                AND domain_ip =#{condition.domainIp,jdbcType=VARCHAR}
            </if>
            <if test="condition.flag != null and condition.flag !='' ">
                AND flag =#{condition.flag,jdbcType=INTEGER}
            </if>
            <if test="condition.id != null and condition.id !='' ">
                AND id =#{condition.id,jdbcType=INTEGER}
            </if>
            <if test="condition.mpsExist != null and condition.mpsExist !='' ">
                AND mps_exist =#{condition.mpsExist,jdbcType=TINYINT}
            </if>
            <if test="condition.domainNum != null and condition.domainNum !='' ">
                AND domain_num =#{condition.domainNum,jdbcType=INTEGER}
            </if>
            <if test="condition.isCn != null   and condition.isCn !='' ">
                AND is_cn =#{condition.isCn,jdbcType=VARCHAR}
            </if>
            <!--<if test="condition.crossDomain != 2 ">-->
                <!--AND cross_domain =#{condition.crossDomain,jdbcType=INTEGER}-->
            <!--</if>-->
        </where>
    </select>

    <select id="queryByIdStartAndEnd" parameterType="map" resultMap="domainDependenceResultMap" >
        <include refid="selectField"/>
        <where>
            is_valid=1
            and id>=#{startId}
            and #{endId} > id
        </where>
    </select>

    <select id="querySpecialCn" parameterType="map" resultMap="domainDependenceResultMap" >
        <include refid="selectField"/>
        <where>
            is_valid=1
            and is_cn like '%/%'
        </where>
    </select>

    <select id="queryPageByCondition" parameterType="map" resultMap="domainDependenceResultMap">
    <include refid="selectField"/>
    <where>
        AND is_valid=1
        <if test="condition.domain != null and condition.domain !='' ">
            AND domain =#{condition.domain,jdbcType=VARCHAR}
        </if>
        <if test="condition.domainTree != null and condition.domainTree !='' ">
            AND domain_tree =#{condition.domainTree,jdbcType=VARCHAR}
        </if>
        <if test="condition.domainIp != null and condition.domainIp !='' ">
            AND domain_ip =#{condition.domainIp,jdbcType=VARCHAR}
        </if>
        <if test="condition.flag != null and condition.flag !='' ">
            AND flag =#{condition.flag,jdbcType=INTEGER}
        </if>
        <if test="condition.id != null and condition.id !='' ">
            AND id =#{condition.id,jdbcType=INTEGER}
        </if>
        <if test="condition.mpsExist != null and condition.mpsExist !='' ">
            AND mps_exist =#{condition.mpsExist,jdbcType=TINYINT}
        </if>
        <if test="condition.domainNum != null and condition.domainNum !='' ">
            AND domain_num =#{condition.domainNum,jdbcType=INTEGER}
        </if>
        <if test="condition.crossDomain != 2 ">
            AND cross_domain =#{condition.crossDomain,jdbcType=INTEGER}
        </if>
        <if test="condition.isCn != null   and condition.isCn !='' ">
            AND is_cn =#{condition.isCn,jdbcType=VARCHAR}
        </if>
        limit ${fromNum},${pageSize}
    </where>
</select>

    <update id="updateByCondition" parameterType="map">
        update domain_dependence
        <set>
            <if test="po.domain != null and po.domain !=''  ">
                domain =#{po.domain,jdbcType=VARCHAR},
            </if>
            <if test="po.domainTree != null and po.domainTree !=''  ">
                domain_tree =#{po.domainTree,jdbcType=VARCHAR},
            </if>
            <if test="po.domainIp != null and po.domainIp !=''  ">
                domain_ip =#{po.domainIp,jdbcType=VARCHAR},
            </if>
            <if test="po.flag != null and po.flag !=''  ">
                flag =#{po.flag,jdbcType=INTEGER},
            </if>
            <if test="po.id != null and po.id !=''  ">
                id =#{po.id,jdbcType=INTEGER},
            </if>
            <if test="po.mpsExist != null and po.mpsExist !=''  ">
                mps_exist =#{po.mpsExist,jdbcType=TINYINT},
            </if>
            <if test="po.domainNum != null and po.domainNum !=''  ">
                domain_num =#{po.domainNum,jdbcType=INTEGER},
            </if>
            <if test="po.isValid != null and po.isValid !=''  ">
                is_valid =#{po.isValid,jdbcType=TINYINT},
            </if>
            <!--<if test="po.crossDomain = 2 ">-->
                <!--cross_domain =#{condition.crossDomain,jdbcType=INTEGER},-->
            <!--</if>-->
            <if test="po.isCn != null   and po.isCn !='' ">
                is_cn =#{po.isCn,jdbcType=VARCHAR}
            </if>
        </set>
        <where>
            AND is_valid=1
            <if test="condition.domain != null and condition.domain !='' ">
                AND domain =#{condition.domain,jdbcType=VARCHAR}
            </if>
            <if test="condition.domainTree != null and condition.domainTree !='' ">
                AND domain_tree =#{condition.domainTree,jdbcType=VARCHAR}
            </if>
            <if test="condition.domainIp != null and condition.domainIp !='' ">
                AND domain_ip =#{condition.domainIp,jdbcType=VARCHAR}
            </if>
            <if test="condition.flag != null and condition.flag !='' ">
                AND flag =#{condition.flag,jdbcType=INTEGER}
            </if>
            <if test="condition.id != null and condition.id !='' ">
                AND id =#{condition.id,jdbcType=INTEGER}
            </if>
            <if test="condition.mpsExist != null and condition.mpsExist !='' ">
                AND mps_exist =#{condition.mpsExist,jdbcType=TINYINT}
            </if>
            <if test="condition.domainNum != null and condition.domainNum !='' ">
                AND domain_num =#{condition.domainNum,jdbcType=INTEGER}
            </if>
            <!--<if test="condition.crossDomain != 2 ">-->
                <!--AND cross_domain =#{condition.crossDomain,jdbcType=INTEGER}-->
            <!--</if>-->
            <if test="condition.isCn != null   and condition.isCn !='' ">
                AND is_cn =#{condition.isCn,jdbcType=VARCHAR}
            </if>
        </where>
    </update>

    <select id="queryByIds" resultMap="domainDependenceResultMap">
        <include refid="selectField"/>
        WHERE id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND is_valid=1
    </select>


</mapper>